name: Générer Graphe Statique et Artefacts

on:
  push:
    paths:
      - 'backend/**'
      - 'scripts/static_call_graph.py'
      - '.github/workflows/generate-callgraph.yml'

jobs:
  build-graph:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Installer dépendances JSON
        run: pip install networkx

      - name: Générer call_graph.json
        run: python scripts/static_call_graph.py

      - name: Installer Graphviz et libs image
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz
          pip install pygraphviz cairosvg

      - name: Générer SVG et PNG
        run: |
          python <<EOF
import json
import subprocess
import networkx as nx
# Charger le graphe JSON
data = json.load(open('call_graph.json'))
G = nx.node_link_graph(data, directed=True)
# Export en DOT
nx.nx_agraph.write_dot(G, 'call_graph.dot')
# Générer SVG/PNG
subprocess.run(['dot', '-Tsvg', 'call_graph.dot', '-o', 'call_graph.svg'], check=True)
subprocess.run(['dot', '-Tpng', 'call_graph.dot', '-o', 'call_graph.png'], check=True)
EOF

      - name: Upload Graph Images as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: call-graph-images
          path: |
            call_graph.svg
            call_graph.png

      - name: Upload JSON as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: call-graph-json
          path: call_graph.json
